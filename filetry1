keyword list = {"null","NULL","and", "and_eq", "bitand", "bitor", "cmpl", "not", "not_eq", "or", "or_eq", "xor", "xor_eq", "noexcept", "nullptr", "asm", "auto", "register", "thread_local", "volatile", "bool", "true", "false", "void", "int", "signed", "unsigned", "long", "short", "unsigned int", "signed int", "short int", "unsigned short int", "signed short int", "long int", "unsigned long int", "signed long int", "float", "double", "long double",  "char", "char16_t", "char32_t", "unsigned char", "signed char", "wchar_t", "enum", "sizeof", "typedef", "typeid", "typename", "template", "break", "do", "for", "while", "continue", "if", "else", "switch", "case", "default", "goto", "try", "throw", "catch", "class", "public", "private", "protected", "static", "static_assert", "static_cast", "this", "operator", "struct", "alignas", "alignof", "alignment_of", "new", "delete", "union", "mutable", "const", "constexpr", "const_cast", "dynamic_cast", "reinterpret_cast", "explicit", "export", "extern", "friend", "inline", "namespace", "using", "return", "virtual", "decltype", "override", "final","cin","cout"}

alphabetL  [a-z]
alpabhetU	[A-Z]
digit		[0-9]
underscore	[_]
whitespace	[ \t]
newline		[ \n]
identifier	{alphabetL|underscore}({alphabetL|alphabetU|underscore|digit})*
pointer		"*"{identifier}
array		{identifier}("["{digit}*"]")*

decimal		[1-9]{digit}+
octal     "0"{digit}+
hexadecimal  {"0x"|"$"}{digit|[A-Fa-f]}+

unsigneddecimal {decimal}{"u"|"U"}
longdecimal     {decimal}{"l"|"L"}
unsignedlongdecimal {decimal}{"ul"|"UL"}

realdecimal		{decimal}"."{digit}*
realoctal     {octal}"."{octal}*
realhexadecimal {hexadecimal}"."{digit|[A-Fa-f]}+

scientificdecimal {decimal|realdecimal}+"E"{"+"|"-"}?{decimal}
scientificoctal   {octal|realoctal}+"E"{"+"|"-"}?{octal}
scientifichexadecimal {hexadecimal|realhexadecimal}+"E"{"+"|"-"}?{digit|[A-Fa-f]}+

string		".*"
comment     ("/*"(.*)"*/")|("//"(.*)"/n")

macros  "#define "
headerfile  "#include "("<"|"){string}(">"|")

%


%

